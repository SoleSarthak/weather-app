{"ast":null,"code":"export async function fetchWeather(city) {\n  const response = await fetch(`http://localhost:3000/weather?city=${city}`);\n  if (!response.ok) {\n    const err = await response.json();\n    throw new Error(err.error || 'Failed to fetch weather');\n  }\n  return response.json();\n}","map":{"version":3,"names":["fetchWeather","city","response","fetch","ok","err","json","Error","error"],"sources":["C:/Users/sarth/weather-frontend/src/services/weatherservice.ts"],"sourcesContent":["export interface WeatherData {\r\n    city: string;\r\n    description: string;\r\n    temperature: number;\r\n    feels_like: number;\r\n    humidity: number;\r\n  }\r\n  \r\n  export async function fetchWeather(city: string): Promise<WeatherData> {\r\n    const response = await fetch(`http://localhost:3000/weather?city=${city}`);\r\n    if (!response.ok) {\r\n      const err = await response.json();\r\n      throw new Error(err.error || 'Failed to fetch weather');\r\n    }\r\n    return response.json();\r\n  }\r\n  "],"mappings":"AAQE,OAAO,eAAeA,YAAYA,CAACC,IAAY,EAAwB;EACrE,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,sCAAsCF,IAAI,EAAE,CAAC;EAC1E,IAAI,CAACC,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAMC,GAAG,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;IACjC,MAAM,IAAIC,KAAK,CAACF,GAAG,CAACG,KAAK,IAAI,yBAAyB,CAAC;EACzD;EACA,OAAON,QAAQ,CAACI,IAAI,CAAC,CAAC;AACxB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}